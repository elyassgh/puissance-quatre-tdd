package connectFour;

public class GridUtils {

    public static final char EMPTY_TOKEN = '-';

    public static final char[][] EMPTY_MATRIX = {
            {'-', '-', '-', '-', '-', '-', '-'},
            {'-', '-', '-', '-', '-', '-', '-'},
            {'-', '-', '-', '-', '-', '-', '-'},
            {'-', '-', '-', '-', '-', '-', '-'},
            {'-', '-', '-', '-', '-', '-', '-'},
            {'-', '-', '-', '-', '-', '-', '-'}};

    public static final char[][] FILLED_MATRIX = {
            {'-', '-', '-', '-', '-', '-', '-'},
            {'-', '-', '-', '-', '-', '-', '-'},
            {'-', '-', '-', '-', '-', '-', '-'},
            {'-', '-', '-', '-', '-', '-', '-'},
            {'-', '-', '-', '-', '-', '-', '-'},
            {'M', '-', '-', '-', '-', '-', '-'}};

    public static final char[][] PREOVERFLOW_MATRIX = {
            {'-', '-', '-', '-', '-', '-', '-'},
            {'M', '-', '-', '-', '-', '-', '-'},
            {'M', '-', '-', '-', '-', '-', '-'},
            {'M', '-', '-', '-', '-', '-', '-'},
            {'M', '-', '-', '-', '-', '-', '-'},
            {'M', '-', '-', '-', '-', '-', '-'}};

    public static final char[][] OVERFLOW_MATRIX = {
            {'M', '-', '-', '-', '-', '-', '-'},
            {'M', '-', '-', '-', '-', '-', '-'},
            {'M', '-', '-', '-', '-', '-', '-'},
            {'M', '-', '-', '-', '-', '-', '-'},
            {'M', '-', '-', '-', '-', '-', '-'},
            {'M', '-', '-', '-', '-', '-', '-'}};

    public static final char[][] FULL_MATRIX = {
            {'R', 'M', 'R', 'M', 'M', 'R', 'R'},
            {'M', 'M', 'R', 'M', 'R', 'M', 'R'},
            {'R', 'R', 'M', 'M', 'R', 'R', 'M'},
            {'M', 'M', 'R', 'R', 'M', 'M', 'M'},
            {'M', 'R', 'M', 'M', 'R', 'R', 'R'},
            {'R', 'M', 'M', 'R', 'M', 'M', 'M'}};

    public static final char[][] MATRIX_WITH_M_WINNER_IN_COLUMN = {
            {'R', 'M', 'R', 'M', 'M', '-', '-'},
            {'M', 'M', 'M', 'M', 'R', '-', '-'},
            {'M', 'R', 'M', 'M', 'R', '-', 'M'},
            {'M', 'M', 'R', 'R', 'M', '-', 'M'},
            {'M', 'R', 'M', 'M', 'R', 'R', 'R'},
            {'R', 'M', 'M', 'R', 'M', 'M', 'M'}};

    public static final char[][] MATRIX_WITH_M_WINNER_IN_ROW = {
            {'R', 'R', 'R', 'R', 'M', '-', '-'},
            {'M', 'M', 'M', 'M', 'R', '-', '-'},
            {'R', 'R', 'M', 'M', 'R', 'M', '-'},
            {'M', 'M', 'R', 'R', 'M', 'M', '-'},
            {'M', 'R', 'M', 'M', 'R', 'R', 'R'},
            {'R', 'M', 'M', 'R', 'M', 'M', 'M'}};

    public static final char[][] MATRIX_WITH_M_WINNER_IN_DIAGONAL = {
            {'M', 'M', 'R', '-', '-', '-', '-'},
            {'R', 'M', 'M', '-', '-', '-', '-'},
            {'M', 'R', 'M', '-', '-', '-', 'M'},
            {'M', 'M', 'R', 'M', '-', '-', 'M'},
            {'M', 'R', 'M', 'M', '-', 'R', 'R'},
            {'R', 'M', 'M', 'R', 'M', 'M', 'M'}};

    public static final char[][] LIST_ROWS = MATRIX_WITH_M_WINNER_IN_ROW;

    public static final char[][] LIST_COLUMNS = {
            {'M', 'R', 'M', 'M', 'M', 'M'},
            {'R', 'M', 'M', 'R', 'M', 'R'},
            {'M', 'R', 'M', '-', '-', '-'},
            {'M', 'M', 'R', 'M', '-', '-'},
            {'M', 'R', 'M', 'M', '-', '-'},
            {'R', 'M', 'M', 'R', '-', '-'},
            {'R', 'M', 'M', '-', '-', '-'},
    };

    public static final char[][] LIST_DIAGONALS = {
            {'M', 'R', 'M', 'M', 'M', 'M'},
            {'M', 'R', 'M', 'M', 'M'},
            {'M', 'M', 'M', 'M'},
            {'M', 'R', 'M'},
            {'M', 'R'},
            {'M'},
            {'M', 'R', 'M', 'M', 'M'},
            {'M', 'R', 'M', 'R', 'M', 'M'},
            {'M', 'R', 'M', 'M'},
            {'M', 'R', 'M'},
            {'M', 'R'},
            {'M'},


    };
}
